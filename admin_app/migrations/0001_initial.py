# Generated by Django 3.2 on 2025-06-05 18:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dep_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=10, unique=True)),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('company_email', models.TextField(unique=True, verbose_name='Encrypted Company Email')),
                ('personal_email', models.TextField(verbose_name='Personal Email')),
                ('pm_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='PM Email')),
                ('mobile_phone', models.TextField()),
                ('office_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('home_phone', models.TextField(blank=True, null=True)),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField()),
                ('address', models.TextField(blank=True, null=True)),
                ('home_house', models.TextField(null=True)),
                ('home_post_office', models.TextField(null=True)),
                ('home_city', models.TextField()),
                ('pincode', models.TextField(blank=True, null=True)),
                ('employee_status', models.CharField(choices=[('employed', 'Employed'), ('resigned', 'Resigned'), ('Intern to employee', 'Intern to employee')], default='employed', max_length=50)),
                ('emergency_contact_name', models.TextField(blank=True, null=True)),
                ('emergency_contact_phone', models.TextField(blank=True, null=True)),
                ('emergency_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('emergency_contact_relation', models.TextField(blank=True, null=True)),
                ('base_salary', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('floating_holidays_balance', models.IntegerField(default=2)),
                ('floating_holidays_used', models.IntegerField(default=0)),
                ('total_leaves', models.PositiveIntegerField(default=15)),
                ('used_leaves', models.PositiveIntegerField(default=0)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('resignation_date', models.DateField(blank=True, null=True)),
                ('incentive', models.TextField(blank=True, null=True)),
                ('joining_bonus', models.TextField(null=True)),
                ('pan_card', models.TextField(blank=True, null=True, verbose_name='PAN Card Number')),
                ('aadhaar', models.TextField(blank=True, null=True, verbose_name='Aadhaar Number')),
                ('bank_name', models.TextField(blank=True, null=True, verbose_name='Bank Name')),
                ('bank_branch', models.TextField(blank=True, null=True, verbose_name='Bank Branch')),
                ('bank_branch_address', models.TextField(blank=True, null=True, verbose_name='Bank Branch Address')),
                ('bank_account', models.TextField(blank=True, null=True, verbose_name='Bank Account Number')),
                ('ifsc_code', models.TextField(blank=True, null=True, verbose_name='IFSC Code')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.country')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.department')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('role_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Salutation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sal_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='state',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, null=True)),
                ('name', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='admin_app.country')),
            ],
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='documents/resumes/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resumes', to='admin_app.employees')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField()),
                ('leave_type', models.CharField(choices=[('Floating Leave', 'Floating Leave'), ('Casual Leave', 'Casual Leave')], default='Casual Leave', max_length=20)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('leave_days', models.PositiveIntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leave_requests_created', to=settings.AUTH_USER_MODEL)),
                ('employee_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='admin_app.employees')),
                ('employee_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Leave Request',
                'verbose_name_plural': 'Leave Requests',
            },
        ),
        migrations.CreateModel(
            name='HolidayResetPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_month', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], help_text='Start month of holiday reset period')),
                ('start_day', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], help_text='Start day of holiday reset period')),
                ('end_month', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], help_text='End month of holiday reset period')),
                ('end_day', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], help_text='End day of holiday reset period')),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='holiday_reset', to='admin_app.country')),
            ],
        ),
        migrations.CreateModel(
            name='HolidayPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('ordinary_holidays_count', models.PositiveIntegerField(help_text='Total ordinary holidays for the year.')),
                ('min_years_experience', models.PositiveIntegerField(help_text='Minimum years of experience for extra holidays to apply.')),
                ('extra_holidays', models.PositiveIntegerField(help_text='Extra holidays allocated for experience.')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.country')),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=50, null=True)),
                ('year', models.IntegerField(default=2025)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.country')),
            ],
        ),
        migrations.CreateModel(
            name='FloatingHolidayPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('allowed_floating_holidays', models.PositiveIntegerField(help_text='Number of floating holidays allowed this year.')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.country')),
            ],
        ),
        migrations.CreateModel(
            name='FloatingHoliday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('year', models.IntegerField(default=2025)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.country')),
            ],
        ),
        migrations.AddField(
            model_name='employees',
            name='employee_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_app.employeetype'),
        ),
        migrations.AddField(
            model_name='employees',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees_managed', to='admin_app.employees'),
        ),
        migrations.AddField(
            model_name='employees',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.role'),
        ),
        migrations.AddField(
            model_name='employees',
            name='salutation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.salutation'),
        ),
        migrations.AddField(
            model_name='employees',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.state'),
        ),
        migrations.AddField(
            model_name='employees',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='documents/certificates/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='admin_app.employees')),
            ],
        ),
    ]
